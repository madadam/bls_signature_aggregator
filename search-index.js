var searchIndex = JSON.parse('{\
"bls_signature_aggregator":{"doc":"","i":[[0,"proof","bls_signature_aggregator","",null,null],[3,"Proof","bls_signature_aggregator::proof","Proof that a quorum of the section elders has agreed on…",null,null],[12,"public_key","","The BLS public key.",0,null],[12,"signature","","The BLS signature corresponding to the public key.",0,null],[3,"ProofShare","","Single share of `Proof`.",null,null],[12,"public_key_set","","BLS public key set.",1,null],[12,"index","","Index of the node that created this proof share.",1,null],[12,"signature_share","","BLS signature share corresponding to the `index`-th public…",1,null],[11,"verify","","Verifies this proof against the payload.",0,[[]]],[11,"new","","Creates new proof share.",1,[[["publickeyset",3],["secretkeyshare",3]]]],[11,"verify","","Verifies this proof share against the payload.",1,[[]]],[0,"signature_aggregator","bls_signature_aggregator","",null,null],[3,"SignatureAggregator","bls_signature_aggregator::signature_aggregator","Accumulator for signature shares for arbitrary payloads.",null,null],[4,"AccumulationError","","Error returned from SignatureAccumulator::add.",null,null],[13,"NotEnoughShares","","There are not enough signature shares yet, more need to be…",2,null],[13,"AlreadyAccumulated","","Enough signature share were already collected before and…",2,null],[13,"InvalidShare","","The signature share being added is invalid. Such share is…",2,null],[13,"Serialise","","The payload failed to be serialised and can\'t be inserted…",2,null],[13,"Combine","","The signature combination failed even though there are…",2,null],[5,"sha3_256","","SHA3-256 hash function.",null,[[],["digest256",6]]],[6,"Digest256","","SHA3-256 hash digest.",null,null],[17,"DEFAULT_EXPIRATION","","Default duration since their last modification after which…",null,null],[11,"new","","Create new accumulator with default expiration.",3,[[]]],[11,"with_expiration","","Create new accumulator with the given expiration.",3,[[["duration",3]]]],[11,"add","","Add new share into the accumulator. If enough valid…",3,[[["proofshare",3]],[["result",4],["accumulationerror",4]]]],[11,"from","bls_signature_aggregator::proof","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","bls_signature_aggregator::signature_aggregator","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"as_fail","","",2,[[],["fail",8]]],[11,"from","","",2,[[["error",6]]]],[11,"from","","",2,[[["error",4]]]],[11,"clone","bls_signature_aggregator::proof","",0,[[],["proof",3]]],[11,"clone","","",1,[[],["proofshare",3]]],[11,"default","bls_signature_aggregator::signature_aggregator","",3,[[]]],[11,"cmp","bls_signature_aggregator::proof","",0,[[["proof",3]],["ordering",4]]],[11,"cmp","","",1,[[["proofshare",3]],["ordering",4]]],[11,"eq","","",0,[[["proof",3]]]],[11,"ne","","",0,[[["proof",3]]]],[11,"eq","","",1,[[["proofshare",3]]]],[11,"ne","","",1,[[["proofshare",3]]]],[11,"partial_cmp","","",0,[[["proof",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["proof",3]]]],[11,"le","","",0,[[["proof",3]]]],[11,"gt","","",0,[[["proof",3]]]],[11,"ge","","",0,[[["proof",3]]]],[11,"partial_cmp","","",1,[[["proofshare",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["proofshare",3]]]],[11,"le","","",1,[[["proofshare",3]]]],[11,"gt","","",1,[[["proofshare",3]]]],[11,"ge","","",1,[[["proofshare",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","bls_signature_aggregator::signature_aggregator","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","bls_signature_aggregator::proof","",0,[[]]],[11,"hash","","",1,[[]]],[11,"description","bls_signature_aggregator::signature_aggregator","",2,[[]]],[11,"cause","","",2,[[],[["option",4],["error",8]]]],[11,"source","","",2,[[],[["option",4],["error",8]]]],[11,"serialize","bls_signature_aggregator::proof","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]]],"p":[[3,"Proof"],[3,"ProofShare"],[4,"AccumulationError"],[3,"SignatureAggregator"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);